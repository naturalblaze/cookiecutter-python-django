[project]
name = "cookiecutter-python-django"
dynamic = ["readme"]
version = "1.0.0"
requires-python = ">=3.10"
description = "CookieCutter for creating Python Django project"
keywords = [
]
authors = [
  { name="Blaze Bryant", email="naturalblaze@gmail.com" },
]
maintainers = [
  {name = "Blaze Bryant", email = "naturalblaze@gmail.com"},
]
license = "MIT"
license-files = [
    "LICENSE"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    ]


dependencies = [
    "cookiecutter",
]

[dependency-groups]
dev = [
    "pytest-cov",
    "pytest-cookies",
    "pylint",
    "pip-audit",
    "black",
    "bandit",
    "pip-audit",
    "tomli",
]

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "generic_tests: marks tests as generic_tests (deselect with -m not generic_tests)",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
command_line= "-m pytest -vvv"

[tool.coverage.report]
include = [
    "hooks/*"
]
fail_under = 100

[tool.pylint]
max-line-length = 120
# This allows pylint to complain on FIXME and XXX notes
notes = [
    "FIXME",
    "XXX",
]
fail-under = 9.9

[tool.black]
line-length = 120

[tool.bandit]
exclude_dirs = [
    "tests",
    "venv",
    ".venv",
    "docs",
    "{{cookiecutter.git_repo_name}}",
]
